#!/bin/bash

# Copyright 2022 /u/Grandfather-Paradox

#Set the number of retries if the download fails
retries=2
#Set where the downloads will go
downloadpath="~/"

fileDurRegex="([0-9]+):([0-9]+):([0-9]+)\.[0-9]+"
streamHrsMinsSecsRegex="([0-9]+):([0-9]+):([0-9]+)"
streamMinsSecsRegex="([0-9]+):([0-9]+)"
streamSecsRegex="[0-9]+"

convert_to_seconds () {
	dur=$1
	if [[ $dur =~ $fileDurRegex || $dur =~ $streamHrsMinsSecsRegex ]]
	then
		hrs=$(echo "${BASH_REMATCH[1]}" | sed 's/^0*//')
		mins=$(echo "${BASH_REMATCH[2]}" | sed 's/^0*//')
		secs=$(echo "${BASH_REMATCH[3]}" | sed 's/^0*//')
	elif [[ $dur =~ $streamMinsSecsRegex ]]
	then
		hrs=0
		mins=$(echo "${BASH_REMATCH[1]}" | sed 's/^0*//')
		secs=$(echo "${BASH_REMATCH[2]}" | sed 's/^0*//')
	elif [[ $dur =~ $streamSecsRegex ]]
	then
		hrs=0
		mins=0
		secs=$dur
	fi

	if [[ -z $hrs ]]; then hrs=0; fi
	if [[ -z $mins ]]; then mins=0; fi
	if [[ -z $secs ]]; then secs=0; fi

	totalSecs=$(( $hrs*360 + $mins*60 + $secs ))
	echo $totalSecs
}

currentEpisode=1
totalEpisodes=$(wc -l links.txt | sed 's/ links.txt//')
while read link; do
	retryDownload=true
	while [ $retryDownload = true ]
	do
		#Reset the retries count
		if [ $c -eq $retries ]; then c=0; fi
		echo -e "\e[36m[ $currentEpisode / $totalEpisodes ]\e[0m"
		yt-dlp --embed-subs --embed-metadata --no-mtime --verbose -P $downloadpath/ --external-downloader aria2c "$link"

		filename=$(yt-dlp --get-filename "$link")

		fileDur=$(mediainfo --Inform="Video;%Duration/String3%" "$downloadpath/$filename")
		streamDur=$(yt-dlp --get-duration "$link")
		totalFileSec=$(convert_to_seconds $fileDur)
		echo "Total file secs: $totalFileSec"
		totalStreamSec=$(convert_to_seconds $streamDur)
		echo "Total stream secs: $totalStreamSec"

		if [[ $totalFileSec -eq $totalStreamSec || $totalFileSec -eq $(( $totalStreamSec-1 )) ]]
		then
			echo -e "\e[32mDownload OK\e[0m"
			retryDownload=false
			currentEpisode=$(( $currentEpisode+1 ))
		else
			echo -e "\e[31mError found, retrying...\e[0m"
			rm "$downloadpath/$filename"
			#Sets the number of retries
			((c++)) && ((c==$retries)) && echo $link >> broken.txt && break
		fi
	done
done <links.txt

exit 0